apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql-auto-failover.node.fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ include "postgresql-auto-failover.fullname" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: "{{ .Values.postgresDatabase }}"
    type: database
spec:
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.node.replicas }}
  serviceName: {{ include "postgresql-auto-failover.fullname" . }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ include "postgresql-auto-failover.fullname" . }}
      app.kubernetes.io/component: node
  template:
    metadata:
      annotations:
        checksum/etc: {{ include (print .Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        checksum/bin: {{ include (print .Template.BasePath "/configmap-bin.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: {{ include "postgresql-auto-failover.fullname" . }}
        app.kubernetes.io/component: node
        component: "{{ .Values.postgresDatabase }}"
        type: database
        {{- if .Values.alerts.enabled }}
        alert-tier: {{ required ".Values.alerts.tier missing" .Values.alerts.tier }}
        alert-service: {{ include "alerts.service" . }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 60
      initContainers:
        - name: wait-for-monitor
          image: "{{ .Values.global.registry }}/kubernetes-entrypoint:{{ .Values.kubernetes_entrypoint_version }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "{{ include "postgresql-auto-failover.monitor.fullname" . }}"
            - name: COMMAND
              value: "true"
      containers:
        - name: postgresql
          image: "{{ .Values.image }}:{{ .Values.imageTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["/postgresql-bin/node.sh"]
          ports:
            - name: "postgresql"
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: {{ default "postgres" .Values.postgresUser | quote }}
            - name: PGUSER
              value: {{ default "postgres" .Values.postgresUser | quote }}
            - name: POSTGRES_DB
              value: {{ default "" .Values.postgresDatabase | quote }}
            - name: PGDATA
              value: /postgresql/data
            {{- if .Values.node.haproxy }}
            - name: PGPORT
              value: "5433"
            {{- end }}
            - name: XDG_CONFIG_HOME
              value: /postgresql
            - name: XDG_DATA_HOME
              value: /postgresql
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-auto-failover.fullname" . }}
                  key: postgres-password
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U "postgres" -h localhost
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 2
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U "postgres" -h localhost
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /postgresql
            - name: postgres-etc
              mountPath: /postgresql-conf
            - name: postgres-bin
              mountPath: /postgresql-bin
            {{- if .Values.dbInit }}
            - name: db-init
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
            {{- if .Values.dbMaintain }}
            - name: db-maintain
              mountPath: /docker-entrypoint-maintaindb.d
            {{- end }}
            {{- if .Values.sharedMemoryLimit }}
            - name: dev-shm
              mountPath: /dev/shm
            {{- end }}
        {{- if .Values.node.haproxy }}
        - name: haproxy
          image: "{{ .Values.image }}:{{ .Values.imageTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["dumb-init", "haproxy", "-f", "/postgresql-conf/haproxy.cfg"]
          volumeMounts:
            - name: postgres-etc
              mountPath: /postgresql-conf
            - name: postgres-bin
              mountPath: /postgresql-bin
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: postgres-etc
          configMap:
            name: {{ include "postgresql-auto-failover.fullname" . }}-etc
            defaultMode: 0444
        - name: postgres-bin
          configMap:
            name: {{ include "postgresql-auto-failover.fullname" . }}-bin
            defaultMode: 0555
        {{- if .Values.dbInit }}
        - name: db-init
          configMap:
            name: {{ .Values.dbInit }}
        {{- end }}
        {{- if .Values.dbMaintain }}
        - name: db-maintain
          configMap:
            name: {{ .Values.dbMaintain }}
        {{- end }}
        {{- if .Values.sharedMemoryLimit }}
        - name: dev-shm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.sharedMemoryLimit }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
      {{- if .Values.persistence.storageClass }}
        {{- printf "storageClassName: %s" .Values.persistence.storageClass -}}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
