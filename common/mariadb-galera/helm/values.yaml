# Default values for elasticsearch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
userId:
  application: 101
  monitoring: 3000
groupId:
  application: 101
  monitoring: 3000

#namePrefix: "mariadb-g" #used for pods, services etc. (default mariadb-g)
cleanOsCacheAtStartup: false #https://www.kernel.org/doc/html/latest/admin-guide/sysctl/vm.html?highlight=drop_caches#drop-caches (default false, only useful for benchmarking)
scripts:
  maxRetries: 20 #how many times should script functions retry before failing(default 10)
  waitTimeBetweenRetriesInSeconds: 6 #how long should script functions wait between retries (default 6)
  logLevel: debug # info(default) or debug
  maxAllowedTimeDifferenceFactor: 12 #to multiply with readinessProbe.timeoutSeconds.application as the maximum allowed time difference for the last configmap update (default 3)
monitoring:
  prometheus:
    instance: prometheus #name of the Prometheus instance that should pull metrics
  mysqld_exporter:
    enabled: true #enable the Prometheus MySQL exporter as sidecar container https://github.com/prometheus/mysqld_exporter
    metricsPort: 9104
  elasticBeatsAutoDiscoveryAnnotations:
    enabled: false #add annotations to allow automatic configuration of Elastic Beats agents https://www.elastic.co/guide/en/beats/metricbeat/current/configuration-autodiscover-hints.html

# command:
#   application:
#     - "sh"
#     - "-c"
#     - "/bin/sleep 3600"
#   monitoring:
#     - "sh"
#     - "-c"
#     - "/bin/sleep 3600"
#   job:
#     - "sh"
#     - "-c"
#     - "/bin/sleep 3600"

# Docker image
image:
  os:
    #registry: keppel.eu-nl-1.cloud.sap
    #project: octobus
    registry: eu.gcr.io
    project: cloud-capacity-mgmt-tes
    applicationname: ubuntu
    applicationversion: 20.04
    imageversion: 0.3.59
    pullPolicy: IfNotPresent
    pullSecret: pull-secret-gcp
  application:
    #registry: keppel.eu-nl-1.cloud.sap
    #project: octobus
    registry: eu.gcr.io
    project: cloud-capacity-mgmt-tes
    applicationname: mariadb-galera
    applicationversion: 10.5.13
    imageversion: 0.0.6
    pullPolicy: Always
    pullSecret: pull-secret-gcp
  monitoring:
    #registry: keppel.eu-nl-1.cloud.sap
    #project: octobus
    registry: eu.gcr.io
    project: cloud-capacity-mgmt-tes
    applicationname: mysqld_exporter
    applicationversion: 0.14.0
    imageversion: 0.1.0
    pullPolicy: Always
    pullSecret: pull-secret-gcp

initContainers:
  increaseMapCount:
    securityContext:
      privileged: true
      runAsUser: 0
  tcpKeepAlive:
    securityContext:
      privileged: true
      runAsUser: 0
  cleanoscache:
    securityContext:
      privileged: true
      runAsUser: 0

# network services
services:
  - name: backend
    type: ClusterIP
    headless: true
    #https://mariadb.com/kb/en/configuring-mariadb-galera-cluster/#network-ports
    ports:
      - name: galera
        port: 4567
        targetPort: 4567
        protocol: TCP
      - name: ist #http://galeracluster.com/library/documentation/galera-parameters.html#ist-recv-addr
        port: 4568
        targetPort: 4568
        protocol: TCP
      - name: sst #https://mariadb.com/kb/en/introduction-to-state-snapshot-transfers-ssts/
        port: 4444
        targetPort: 4444
        protocol: TCP
    sessionAffinity: None
  - name: frontend
    type: ClusterIP
    headless: false
    ports:
      - name: mysql
        port: 3306
        targetPort: 3306
        protocol: TCP
    sessionAffinity: None

# Storage
volumeMounts:
  - name: data
    claimName: data
    mountPath: /opt/mariadb/data
    type: persistentVolume
  - name: log
    claimName: log
    mountPath: /opt/mariadb/log
    type: persistentVolume
  - name: cert-wildcard
    mountPath: /opt/mariadb/etc/certs
    type: secret
    readOnly: true

volumeClaimTemplates:
  - name: data
    accessModes: [ReadWriteOnce]
    capacity: 1Gi
  - name: log
    accessModes: [ReadWriteOnce]
    capacity: 10Gi

# Resource limits per container
resourceLimits:
  cpu:
    application: 2
    monitoring: 0.5
    job: 0.5
  memory:
    application: 256Mi
    monitoring: 48Mi
    job: 48Mi

# Deployment rules
replicas: 3 #only uneven values are allowed to avoid a split brain cluster state
maxUnavailable: 1
maxSurge: 1
hpa:
  enabled: false
  minReplicas: 3
  maxReplicas: 3
  maxCpuPercent: 50
UpdateStrategy: RollingUpdate
podManagementPolicy: Parallel
revisionHistoryLimit: 3
terminationGracePeriodSeconds: 86400
regional: false
backoffLimit: 12 #https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy
activeDeadlineSeconds: 600 #https://kubernetes.io/docs/concepts/workloads/controllers/job/#job-termination-and-cleanup
ttlSecondsAfterFinished: 7200 #https://kubernetes.io/docs/concepts/workloads/controllers/job/#clean-up-finished-jobs-automatically
restartPolicy: OnFailure #https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures

#Container Health Checks
startupProbe:
  initialDelaySeconds:
    application: 15
  periodSeconds:
    application: 10
  failureThreshold:
    application: 12
  timeoutSeconds:
    application: 20
livenessProbe:
  initialDelaySeconds:
    application: 15
    monitoring: 5
  periodSeconds:
    application: 30
    monitoring: 30
  failureThreshold:
    application: 4
    monitoring: 4
  timeoutSeconds:
    application: 20
    monitoring: 20
readinessProbe:
  initialDelaySeconds:
    application: 30
    monitoring: 10
  periodSeconds:
    application: 20
    monitoring: 20
  successThreshold:
    application: 1
    monitoring: 1
  failureThreshold:
    application: 3
    monitoring: 3
  timeoutSeconds:
    application: 10
    monitoring: 10

env:
  MARIADB_CLUSTER_NAME:
    value: eu-de-1.nova
    containerType:
      - application
  MARIADB_ROOT_USER:
    secretName: db-full-auth
    secretKey: username
    containerType:
      - application
      - job
  MARIADB_ROOT_PASSWORD:
    secretName: db-full-auth
    secretKey: password
    containerType:
      - application
      - job
  GALERA_SST_USER:
    secretName: ga-sync-auth
    secretKey: username
    containerType:
      - application
  GALERA_SST_PASSWORD:
    secretName: ga-sync-auth
    secretKey: password
    containerType:
      - application
  MARIADB_MONITORING_USER:
    secretName: db-mon-auth
    secretKey: username
    containerType:
      - application
      - monitoring
      - job
  MARIADB_MONITORING_PASSWORD:
    secretName: db-mon-auth
    secretKey: password
    containerType:
      - application
      - monitoring
      - job
  MARIADB_MONITORING_CONNECTION_LIMIT:
    value: 6
    containerType:
      - application
      - job
  WEB_TELEMETRY_PATH:
    value: /metrics
    containerType:
      - monitoring

mariadb:
  binLogDir: log #if not defined the data dir will be used. Needs a log volume mount to be configured too
  galera:
    waitForPrimaryTimeoutInSeconds: 60 #https://galeracluster.com/library/documentation/galera-parameters.html#pc.wait_prim_timeout
    logLevel: info #info(default) or debug https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_debug
    pcrecovery: false #https://galeracluster.com/library/documentation/pc-recovery.html
    sst_method: rsync #rsync or mariabackup(also requires GALERA_SST_USER and GALERA_SST_PASSWORD)
    slaveThreads: 16 #https://galeracluster.com/library/documentation/mysql-wsrep-options.html#wsrep-slave-threads
