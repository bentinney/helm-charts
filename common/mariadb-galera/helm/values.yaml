# Default values for elasticsearch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
userId: 101
groupId: 101
# command:
#   - "sh"
#   - "-c"
#   - "/bin/sleep 3600"

# Docker image
image:
  os:
    #registry: keppel.eu-nl-1.cloud.sap
    #project: octobus
    registry: eu.gcr.io
    project: cloud-capacity-mgmt-tes
    applicationname: ubuntu
    applicationversion: 20.04
    imageversion: 0.3.59
    pullPolicy: IfNotPresent
    pullSecret: pull-secret-gcp
  application:
    #registry: keppel.eu-nl-1.cloud.sap
    #project: octobus
    registry: eu.gcr.io
    project: cloud-capacity-mgmt-tes
    applicationname: mariadb-galera
    applicationversion: 10.5.13
    imageversion: 0.0.4
    pullPolicy: Always
    pullSecret: pull-secret-gcp

initContainers:
  increaseMapCount:
    securityContext:
      privileged: true
      runAsUser: 0
  tcpKeepAlive:
    securityContext:
      privileged: true
      runAsUser: 0

# network services
services:
  - name: be
    type: ClusterIP
    headless: true
    #https://mariadb.com/kb/en/configuring-mariadb-galera-cluster/#network-ports
    ports:
      - name: galera
        port: 4567
        targetPort: 4567
        protocol: TCP
      - name: ist #http://galeracluster.com/library/documentation/galera-parameters.html#ist-recv-addr
        port: 4568
        targetPort: 4568
        protocol: TCP
      - name: sst #https://mariadb.com/kb/en/introduction-to-state-snapshot-transfers-ssts/
        port: 4444
        targetPort: 4444
        protocol: TCP
    sessionAffinity: None
  - name: fe
    type: ClusterIP
    headless: false
    ports:
      - name: mysql
        port: 3306
        targetPort: 3306
        protocol: TCP
    sessionAffinity: None

# Storage
volumeMounts:
  - name: data
    nodeType:
      - data
    claimName: data
    mountPath: /opt/mariadb/data
    type: persistentVolume
  - name: cert-wildcard
    mountPath: /opt/mariadb/etc/certs
    type: secret
    readOnly: true

volumeClaimTemplates:
  - name: data
    accessModes: [ReadWriteOnce]
    capacity: 1Gi

# Resource limits per container
resourceLimits:
  cpu: 2
  memory: 256Mi

# Deployment rules
replicas: 3
maxUnavailable: 1
maxSurge: 1
hpa:
  enabled: false
  minReplicas: 3
  maxReplicas: 3
  maxCpuPercent: 50
UpdateStrategy: RollingUpdate
podManagementPolicy: Parallel
revisionHistoryLimit: 3
terminationGracePeriodSeconds: 86400
regional: false

#Container Health Checks
startupProbe:
  initialDelaySeconds: 15
  periodSeconds: 30
  failureThreshold: 21
  timeoutSeconds: 20
livenessProbe:
  initialDelaySeconds: 15
  periodSeconds: 30
  failureThreshold: 4
  timeoutSeconds: 20
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  failureThreshold: 3
  timeoutSeconds: 10

# Environment vars
env:
  1:
    name: MARIADB_CLUSTER_NAME
    value: eu-de-1.nova
  2:
    name: MARIADB_ROOT_USER
    secretName: db-full-auth
    secretKey: username
  3:
    name: MARIADB_ROOT_PASSWORD
    secretName: db-full-auth
    secretKey: password
  4:
    name: GALERA_SST_USER
    secretName: ga-sync-auth
    secretKey: username
  5:
    name: GALERA_SST_PASSWORD
    secretName: ga-sync-auth
    secretKey: password

mariadb:
  galera:
    waitForPrimaryTimeoutInSeconds: 60 #https://galeracluster.com/library/documentation/galera-parameters.html#pc.wait_prim_timeout
