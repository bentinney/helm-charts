{{- $wsrepProviderOptions := dict }}
{{- $nodeNamePrefix := (include "nodeNamePrefix" (dict "global" $ "component" "application")) -}}
{{- if $.Values.mariadb.galera.pcrecovery }}
  {{- $_ := set $wsrepProviderOptions "pc.recovery" "pc.recovery=TRUE"}}
{{- else  }}
  {{- $_ := set $wsrepProviderOptions "pc.recovery" "pc.recovery=FALSE"}}
{{- end }}
{{- $_ := set $wsrepProviderOptions "gcache.recover" "gcache.recover=yes" }}
{{- $_ := set $wsrepProviderOptions "cert.log_conflicts" "cert.log_conflicts=ON"}}
{{- if $.Values.mariadb.galera.debug }}
  {{- $_ := set $wsrepProviderOptions "debug" "debug=YES"}}
{{- else  }}
  {{- $_ := set $wsrepProviderOptions "debug" "debug=NO"}}
{{- end }}
{{- $_ := set $wsrepProviderOptions "ist.recv_addr" (printf "ist.recv_addr=${CONTAINER_IP}:%d" ((include "getNetworkPort" (dict "global" $ "type" "backend" "name" "ist")) | int)) }}
{{- $_ := set $wsrepProviderOptions "pc.wait_prim_timeout" (printf "pc.wait_prim_timeout=PT%dS" ($.Values.mariadb.galera.waitForPrimaryTimeoutInSeconds | default 30 | int)) }}
{{- /*
  #https://mariadb.com/kb/en/galera-cluster-system-variables/
  #https://galeracluster.com/library/documentation/weighted-quorum.html#wq-three-nodes
*/}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-cnf
  namespace: {{ $.Release.Namespace }}
data:
{{- range $int, $err := until ($.Values.replicas.application|int) }}
  my.cnf.{{ $nodeNamePrefix }}-{{ $int }}.tpl: |-
    [mysqld]
    {{- if $.Values.mariadb.performance_schema }}
    # performance monitoring
    performance_schema=ON
    performance-schema-instrument='stage/%=ON'
    performance-schema-consumer-events-stages-current=ON
    performance-schema-consumer-events-stages-history=ON
    performance-schema-consumer-events-stages-history-long=ON
    {{- else }}
    performance_schema=OFF
    {{- end }}

    [mariadb]
    wsrep-provider=/usr/lib/libgalera_smm.so
    plugin_load_add = wsrep_info #https://mariadb.com/kb/en/wsrep_info-plugin/
    binlog_format=ROW
    log-bin=/opt/${SOFTWARE_NAME}/{{ $.Values.mariadb.binLogDir | default "data" }}/mysql-bin.log
    expire_logs_days=1
    default_storage_engine=InnoDB
    innodb_autoinc_lock_mode=2
    innodb_flush_log_at_trx_commit=0
    wsrep_gtid_mode=on
    wsrep_gtid_domain_id={{ $.Values.mariadb.galera.gtidDomainId | default 0 | int }}
    gtid_domain_id={{ $int | int }}
    log_slave_updates=1
    wsrep_restart_slave=on
    wsrep-cluster-name={{ include "getEnvVar" (dict "global" $ "name" "MARIADB_CLUSTER_NAME") }}
    wsrep_cluster_address={{ include "wsrepClusterAddress" (dict "global" $) }}
    {{- $_ := set $wsrepProviderOptions "pc.weight" (printf "pc.weight=${PC_WEIGHT_%d}" $int)}}
    wsrep_provider_options={{ (join ";" (values $wsrepProviderOptions | sortAlpha)) }}
    wsrep_node_address=${CONTAINER_IP}
    wsrep_node_name={{ $nodeNamePrefix }}-{{ $int }}
    wsrep-on=1
    wsrep_log_conflicts=ON
    {{- if eq $.Values.mariadb.galera.logLevel "debug" }}wsrep_debug=1{{- end }}
    {{- if eq $.Values.mariadb.galera.sst_method "mariabackup" }}
      {{- $validateVar := (required "GALERA_SST_USER env var required if mariabackup is enabled" (include "getEnvVar" (dict "global" $ "name" "GALERA_SST_USER"))) }}
      {{- $validateVar := (required "GALERA_SST_PASSWORD env var required if mariabackup is enabled" (include "getEnvVar" (dict "global" $ "name" "GALERA_SST_PASSWORD"))) }}
    wsrep_sst_method=mariabackup
    wsrep_sst_auth=${GALERA_SST_USER}:${GALERA_SST_PASSWORD}
    {{- end }}
    wsrep_slave_threads={{ $.Values.mariadb.galera.slaveThreads | default 4 }}

{{- end }}
