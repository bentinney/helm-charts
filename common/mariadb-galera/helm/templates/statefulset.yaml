---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $.Release.Name }}
  labels:
    app: {{ $.Release.Name }}
    release: {{ $.Release.Name }}
spec:
  replicas: {{ $.Values.replicas | default 3 }}
  serviceName: {{ $.Release.Name }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
  revisionHistoryLimit: {{ $.Values.revisionHistoryLimit }}
  podManagementPolicy: {{ $.Values.podManagementPolicy }}
  updateStrategy:
    type: {{ required "UpdateStrategy setting required" $.Values.UpdateStrategy }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}
        release: {{ $.Release.Name }}
      annotations:
        checksum/my.cnf.yml: {{ include (print $.Template.BasePath "/configmap-my.cnf.yaml") $ | sha256sum }}
        checksum/probes.sh: {{ include (print $.Template.BasePath "/configmap-probes.sh.yaml") $ | sha256sum }}
        checksum/hooks.sh: {{ include (print $.Template.BasePath "/configmap-hooks.sh.yaml") $ | sha256sum }}
        checksum/galerastatus.sh: {{ include (print $.Template.BasePath "/configmap-galerastatus.yaml") $ | sha256sum }}
        checksum/entrypoint.sh: {{ include (print $.Template.BasePath "/configmap-entrypoint.sh.yaml") $ | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- if $.Values.regional }}
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - {{ $.Release.Name }}
            namespaces:
              - {{ $.Release.Namespace }}
            topologyKey: "topology.kubernetes.io/zone"
          {{- end }}
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - {{ $.Release.Name }}
            namespaces:
              - {{ $.Release.Namespace }}
            topologyKey: "kubernetes.io/hostname"
      serviceAccount: {{ $.Release.Name }}
      securityContext:
        runAsUser:  {{ $.Values.userId }}
        fsGroup:  {{ $.Values.groupId }}
        # disabled because not whitelisted
        # sysctls:
        # - name: net.ipv4.tcp_keepalive_time
        #   value: "60"
        # - name: net.ipv4.tcp_keepalive_intvl
        #   value: "60"
        # - name: net.ipv4.tcp_keepalive_probes
        #   value: "5"
      {{- if and (hasKey $.Values.image.application "pullSecret") $.Values.image.application.pullSecret }}
      imagePullSecrets:
      - name: {{ $.Release.Name }}-{{$.Values.image.application.pullSecret}}
      {{- end }}
      initContainers:
      - name: sysctl-tcp-keepalive
        image: "{{ $.Values.image.os.registry }}/{{ $.Values.image.os.project }}/{{ $.Values.image.os.applicationname }}:{{ $.Values.image.os.applicationversion }}-{{ $.Values.image.os.imageversion }}"
        imagePullPolicy: {{ $.Values.image.os.pullPolicy | default "IfNotPresent" | quote }}
        command:
        - sh
        - -c
        - 'sysctl -w net.ipv4.tcp_keepalive_time=60 net.ipv4.tcp_keepalive_intvl=60 net.ipv4.tcp_keepalive_probes=5'
        securityContext:
          privileged: {{ $.Values.initContainers.tcpKeepAlive.securityContext.privileged }}
          runAsUser: {{ $.Values.initContainers.tcpKeepAlive.securityContext.runAsUser }}
      - name: increase-map-count
        image: "{{ $.Values.image.os.registry }}/{{ $.Values.image.os.project }}/{{ $.Values.image.os.applicationname }}:{{ $.Values.image.os.applicationversion }}-{{ $.Values.image.os.imageversion }}"
        imagePullPolicy: {{ $.Values.image.os.pullPolicy | default "IfNotPresent" | quote }}
        command:
        - sh
        - -c
        - 'echo 262144 > /proc/sys/vm/max_map_count'
        securityContext:
          privileged: {{ $.Values.initContainers.increaseMapCount.securityContext.privileged }}
          runAsUser: {{ $.Values.initContainers.increaseMapCount.securityContext.runAsUser }}
      containers:
      - name: {{ $.Release.Name }}
        image: "{{ $.Values.image.application.registry }}/{{ $.Values.image.application.project }}/{{ $.Values.image.application.applicationname }}:{{ $.Values.image.application.applicationversion }}-{{ $.Values.image.application.imageversion }}"
        imagePullPolicy: {{ $.Values.image.application.pullPolicy | default "IfNotPresent" | quote }}
        securityContext:
           capabilities:
               add:
                 - IPC_LOCK
        {{- if $.Values.command }}
        command:
{{ $.Values.command | toYaml | indent 8 }}
        {{- end }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONTAINER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTAINER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: MEMORY
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: MYSQL_PORT
          {{- range $servicesKey, $servicesValue := $.Values.services }}
            {{- if eq $servicesValue.name "fe"}}
              {{- range $portsKey, $portsValue := $servicesValue.ports }}
                {{- if eq $portsValue.name "mysql"}}
          value: "{{ $portsValue.targetPort }}"
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
        - name: GALERA_PORT
          {{- range $servicesKey, $servicesValue := $.Values.services }}
            {{- if eq $servicesValue.name "be"}}
              {{- range $portsKey, $portsValue := $servicesValue.ports }}
                {{- if eq $portsValue.name "galera"}}
          value: "{{ $portsValue.targetPort }}"
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- /* https://galeracluster.com/library/documentation/weighted-quorum.html#wq-three-nodes */}}
          {{- range $int, $err := until ($.Values.replicas|int) }}
        - name: PC_WEIGHT_{{ $int }}
          value: "{{ sub ($.Values.replicas|int) (add $int 1) }}"
          {{- end }}
        - name: PC_RECOVERY
          value: "{{ $.Values.mariadb.galera.pcrecovery | default "false" }}"
          {{- range $envKey, $envValue := $.Values.env }}
        - name: {{ $envKey }}
            {{- if $envValue.value }}
          value: "{{ $envValue.value }}"
            {{- end }}
            {{- if $envValue.secretName }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Release.Name }}-{{ $envValue.secretName }}
              key: {{ $envValue.secretKey }}
            {{- end }}
          {{- end }}
        resources:
          requests:
            cpu: {{ $.Values.resourceLimits.cpu | default 0.5 }}
          limits:
            memory: {{ $.Values.resourceLimits.memory | default "64Mi" | quote }}
        ports:
          {{- range $servicesKey, $servicesValue := $.Values.services }}
            {{- if eq $servicesValue.name "be"}}
              {{- range $portsKey, $portsValue := $servicesValue.ports }}
          - containerPort: {{ $portsValue.targetPort }}
            name: {{ $portsValue.name }}
            protocol: {{ $portsValue.protocol | default "TCP" }}
              {{- end }}
            {{- end }}
          {{- end }}
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - '/opt/mariadb/bin/startup.sh'
          {{- if $.Values.startupProbe }}
          {{ if $.Values.startupProbe.initialDelaySeconds }} {{- (printf "initialDelaySeconds: %d" (int64 $.Values.startupProbe.initialDelaySeconds)) }} {{ else }}initialDelaySeconds: 60 {{end}}
          {{ if $.Values.startupProbe.periodSeconds }} {{- (printf "periodSeconds: %d" (int64 $.Values.startupProbe.periodSeconds)) }} {{ else }}periodSeconds: 30 {{end}}
          {{ if $.Values.startupProbe.failureThreshold }} {{- (printf "failureThreshold: %d" (int64 $.Values.startupProbe.failureThreshold)) }} {{ else }}failureThreshold: 4 {{end}}
          {{ if $.Values.startupProbe.timeoutSeconds }} {{- (printf "timeoutSeconds: %d" (int64 $.Values.startupProbe.timeoutSeconds)) }} {{ else }}timeoutSeconds: 20 {{end}}
          {{- else }}
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 4
          timeoutSeconds: 20
          {{- end }}
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - '/opt/mariadb/bin/liveness.sh'
          {{- if $.Values.livenessProbe }}
          {{ if $.Values.livenessProbe.initialDelaySeconds }} {{- (printf "initialDelaySeconds: %d" (int64 $.Values.livenessProbe.initialDelaySeconds)) }} {{ else }}initialDelaySeconds: 60 {{end}}
          {{ if $.Values.livenessProbe.periodSeconds }} {{- (printf "periodSeconds: %d" (int64 $.Values.livenessProbe.periodSeconds)) }} {{ else }}periodSeconds: 30 {{end}}
          {{ if $.Values.livenessProbe.failureThreshold }} {{- (printf "failureThreshold: %d" (int64 $.Values.livenessProbe.failureThreshold)) }} {{ else }}failureThreshold: 4 {{end}}
          {{ if $.Values.livenessProbe.timeoutSeconds }} {{- (printf "timeoutSeconds: %d" (int64 $.Values.livenessProbe.timeoutSeconds)) }} {{ else }}timeoutSeconds: 20 {{end}}
          {{- else }}
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 4
          timeoutSeconds: 20
          {{- end }}
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - '/opt/mariadb/bin/readiness.sh'
          {{- if $.Values.readinessProbe }}
          {{ if $.Values.readinessProbe.initialDelaySeconds }} {{- (printf "initialDelaySeconds: %d" (int64 $.Values.readinessProbe.initialDelaySeconds)) }} {{ else }}initialDelaySeconds: 90 {{ end }}
          {{ if $.Values.readinessProbe.periodSeconds }} {{- (printf "periodSeconds: %d" (int64 $.Values.readinessProbe.periodSeconds)) }} {{ else }}periodSeconds: 20 {{ end }}
          {{ if $.Values.readinessProbe.successThreshold }} {{- (printf "successThreshold: %d" (int64 $.Values.readinessProbe.successThreshold)) }} {{ else }}successThreshold: 1 {{ end }}
          {{ if $.Values.readinessProbe.failureThreshold }} {{- (printf "failureThreshold: %d" (int64 $.Values.readinessProbe.failureThreshold)) }} {{ else }}failureThreshold: 3 {{ end }}
          {{ if $.Values.readinessProbe.timeoutSeconds }} {{- (printf "timeoutSeconds: %d" (int64 $.Values.readinessProbe.timeoutSeconds)) }} {{ else }}timeoutSeconds: 10 {{ end }}
          {{- else }}
          initialDelaySeconds: 90
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 2
          timeoutSeconds: 10
          {{- end }}
        lifecycle:
          preStop:
            exec:
              command:
                - sh
                - -c
                - '/opt/mariadb/bin/pre-stop-hook.sh'
          postStart:
            exec:
              command:
                - sh
                - -c
                - '/opt/mariadb/bin/post-start-hook.sh'
        volumeMounts:
          {{- range $volumeMountsKey, $volumeMountsValue := $.Values.volumeMounts }}
            {{- if (hasKey $volumeMountsValue "claimName") }}
              {{- range $volumeClaimTemplatesKey, $volumeClaimTemplatesValue := $.Values.volumeClaimTemplates }}
                {{- if eq $volumeClaimTemplatesValue.name $volumeMountsValue.claimName }}
          - name: {{ $volumeMountsValue.name }}-{{ $volumeMountsValue.claimName | lower }}
            mountPath: {{ $volumeMountsValue.mountPath }}
                  {{- if $volumeMountsValue.readOnly }}
            readOnly: {{ $volumeMountsValue.readOnly }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- else }}
          - name: {{ $volumeMountsValue.name | lower }}
            mountPath: {{ $volumeMountsValue.mountPath }}
              {{- if $volumeMountsValue.readOnly }}
            readOnly: {{ $volumeMountsValue.readOnly }}
              {{- end }}
            {{- end }}
          {{- end }}
          - name: my-cnf
            mountPath: /opt/mariadb/etc/conf.d/tpl
            readOnly: true
          - name: galerastatus
            mountPath: /opt/mariadb/etc/galerastatus
            readOnly: false
          - name: entrypoint-sh
            mountPath: /opt/mariadb/bin/entrypoint-galera.sh
            subPath: entrypoint-galera.sh
            readOnly: true
          - name: probes-sh
            mountPath: /opt/mariadb/bin/startup.sh
            subPath: startup.sh
            readOnly: true
          - name: probes-sh
            mountPath: /opt/mariadb/bin/liveness.sh
            subPath: liveness.sh
            readOnly: true
          - name: probes-sh
            mountPath: /opt/mariadb/bin/readiness.sh
            subPath: readiness.sh
            readOnly: true
          - name: hooks-sh
            mountPath: /opt/mariadb/bin/pre-stop-hook.sh
            subPath: pre-stop-hook.sh
            readOnly: true
          - name: hooks-sh
            mountPath: /opt/mariadb/bin/post-start-hook.sh
            subPath: post-start-hook.sh
            readOnly: true
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds | default 86400 }}
      volumes:
        {{- range $volumeMountsKey, $volumeMountsValue := $.Values.volumeMounts }}
          {{- if $volumeMountsValue.type }}
            {{- if ne $volumeMountsValue.type "persistentVolume" }}
        - name: {{ $volumeMountsValue.name }}
              {{- if eq $volumeMountsValue.type "secret"}}
          {{ $volumeMountsValue.type }}:
            secretName: {{ $.Release.Name }}-{{ $volumeMountsValue.name }}
              {{- else if eq $volumeMountsValue.type "hostPath" }}
          {{ $volumeMountsValue.type }}:
            path: {{ $volumeMountsValue.hostPath }}
              {{- else }}
            name: {{ $volumeMountsValue.name }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
        - name: my-cnf
          configMap:
            name: my-cnf
            defaultMode: 0444
        - name: galerastatus
          configMap:
            name: galerastatus
            defaultMode: 0750
        - name: entrypoint-sh
          configMap:
            name: entrypoint-sh
            defaultMode: 0755
        - name: probes-sh
          configMap:
            name: probes-sh
            defaultMode: 0755
        - name: hooks-sh
          configMap:
            name: hooks-sh
            defaultMode: 0755
  volumeClaimTemplates:
  {{- range $volumeClaimTemplatesKey, $volumeClaimTemplatesValue := $.Values.volumeClaimTemplates }}
    {{- range $volumeMountsKey, $volumeMountsValue := $.Values.volumeMounts }}
      {{- if (hasKey $volumeMountsValue "claimName") }}
        {{- if eq $volumeClaimTemplatesValue.name $volumeMountsValue.claimName }}
  - metadata:
      name: {{ $volumeMountsValue.name }}-{{ $volumeMountsValue.claimName | lower }}
    spec:
          {{- if $volumeClaimTemplatesValue.storageClassName }}
      storageClassName: {{ $.Release.Name }}-{{ $volumeClaimTemplatesValue.storageClassName }}
          {{- end }}
      accessModes: {{ $volumeClaimTemplatesValue.accessModes }}
      resources:
        requests:
          storage: {{ $volumeClaimTemplatesValue.capacity }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
