---
apiVersion: v1
kind: ConfigMap
metadata:
  name:  checks-sh
  namespace: {{ $.Release.Namespace }}
data:
  liveness.sh: |-
    #!/usr/bin/env bash
    set +e
    set -u
    set -o pipefail
    set +x

    mysql --defaults-file=/opt/mariadb/etc/my.cnf --protocol=tcp -u root -h localhost --port=${MYSQL_PORT} --batch --connect-timeout={{ $.Values.livenessProbe.timeoutSeconds }} --execute="SHOW DATABASES;" | grep --silent 'mysql'
    if [ $? -eq 0 ]; then
      echo 'MariaDB MySQL API reachable'
    else
      echo 'MariaDB MySQL API not reachable'
      exit 1
    fi

    timeout {{ $.Values.livenessProbe.timeoutSeconds }} bash -c "</dev/tcp/${CONTAINER_IP}/${GALERA_PORT}"
    if [ $? -eq 0 ]; then
      echo 'MariaDB Galera API reachable'
    else
      echo 'MariaDB Galera API not reachable'
      exit 1
    fi

    mysql --defaults-file=/opt/${SOFTWARE_NAME}/etc/my.cnf --protocol=tcp -u root -h localhost --port=${MYSQL_PORT} --database=mysql --connect-timeout={{ $.Values.livenessProbe.timeoutSeconds }} --execute="SHOW GLOBAL STATUS LIKE 'wsrep_cluster_status';" | grep 'wsrep_cluster_status' | grep --silent 'Primary'
    if [ $? -eq 0 ]; then
      echo 'MariaDB Galera node reports a working cluster status'
    else
      echo 'MariaDB Galera node reports a not working cluster status'
      exit 1
    fi

    mysql --defaults-file=/opt/${SOFTWARE_NAME}/etc/my.cnf --protocol=tcp -u root -h localhost --port=${MYSQL_PORT} --database=mysql --connect-timeout={{ $.Values.livenessProbe.timeoutSeconds }} --execute="SHOW GLOBAL STATUS LIKE 'wsrep_connected';" | grep 'wsrep_connected' | grep --silent 'ON'
    if [ $? -eq 0 ]; then
      echo 'MariaDB Galera node connected to other cluster nodes'
    else
      echo 'MariaDB Galera node not connected to other cluster nodes'
      exit 1
    fi

  readiness.sh: |-
    #!/usr/bin/env bash
    set +e
    set -u
    set -o pipefail
    set +x

    mysql --defaults-file=/opt/${SOFTWARE_NAME}/etc/my.cnf --protocol=tcp -u root -h localhost --port=${MYSQL_PORT} --database=mysql --connect-timeout={{ $.Values.readinessProbe.timeoutSeconds }} --execute="STATUS;" | grep 'Server version:' | grep --silent "${SOFTWARE_VERSION}"
    if [ $? -eq 0 ]; then
      echo 'MariaDB MySQL API usable'
    else
      echo 'MariaDB MySQL API not usable'
      exit 1
    fi

    mysql --defaults-file=/opt/${SOFTWARE_NAME}/etc/my.cnf --protocol=tcp -u root -h localhost --port=${MYSQL_PORT} --database=mysql --connect-timeout={{ $.Values.readinessProbe.timeoutSeconds }} --execute="SHOW GLOBAL STATUS LIKE 'wsrep_local_state_comment';" | grep 'wsrep_local_state_comment' | grep --invert-match --silent 'Initialized'
    if [ $? -eq 0 ]; then
      echo 'MariaDB Galera node has not failed to join the cluster'
    else
      echo 'MariaDB Galera node has failed to join the cluster'
      exit 1
    fi

    mysql --defaults-file=/opt/${SOFTWARE_NAME}/etc/my.cnf --protocol=tcp -u root -h localhost --port=${MYSQL_PORT} --database=mysql --connect-timeout={{ $.Values.readinessProbe.timeoutSeconds }} --execute="SHOW GLOBAL STATUS LIKE 'wsrep_ready';" | grep 'wsrep_ready' | grep --silent 'ON'
    if [ $? -eq 0 ]; then
      echo 'MariaDB Galera ready for queries'
    else
      echo 'MariaDB Galera not ready for queries'
      exit 1
    fi
