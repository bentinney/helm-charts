groups:
- name: wsus-win-exporter.alerts
  rules:      
  - alert: WSUSMetricsDownWarn
    expr: count(up{job="win-exporter-wsus"} == 0) by (server_name) 
    for: 1h
    labels:
      severity: warning
      service: wsus
      context: "{{ $labels.server_name }}"
      meta: "WSUS metrics cannot be fetched from node {{ $labels.server_name }}"
    annotations:
      description: "WSUS metrics cannot be fetched from node {{ $labels.server_name }}. Check if the windows exporter service is running!"
      summary: "WSUS metrics cannot be fetched from node {{ $labels.server_name }}"

  # the display_name label of a service is only available in the windows_service_info metrics. Hence we have to join the two.
  # if a service is getting restarted, the process_id changes. So, we have to use count to get a single metric
  - alert: WSUSDownWarn
    expr: count(windows_service_state{state!="running", job="win-exporter-wsus"} > 0) by (server_name, name, state) * on(server_name, name) group_left(display_name) count(windows_service_info) by(server_name, name, display_name) 
    for: 1h
    labels:
      severity: warning
      service: wsus
      context: "{{ $labels.server_name }}"
      meta: "WSUS {{ $labels.server_name }} os down. {{ $labels.message }}"
    annotations:
      description: "WSUS {{ $labels.server_name }} os down. {{ $labels.message }}"
      summary: "WSUS {{ $labels.server_name }} os down. {{ $labels.message }}"

  - alert: WSUSServiceDownWarn
    expr: count(windows_service_state{state!="running", job="win-exporter-wsus"} > 0) by (server_name, name, state) 
    for: 1h
    labels:
      severity: warning
      service: wsus
      context: "{{ $labels.server_name }}"
      meta: "Service {{ $labels.name }} in State {{ $labels.state }} on node {{ $labels.server_name }}"
    annotations:
      description: "Service {{ $labels.name }} in State {{ $labels.state }} on node {{ $labels.server_name }}. Check the service!"
      summary: "Service {{ $labels.name }} in State {{ $labels.state }} on node {{ $labels.server_name }}"

  - alert: WSUSDiskFullInfo
    expr: count(100 - (windows_logical_disk_free_bytes{volume!~"HarddiskVolume.*",job="win-exporter-wsus"}*100/windows_logical_disk_size_bytes{volume!~"HarddiskVolume.*",job="win-exporter-wsus"}) > 80) by (server_name, volume) 
    for: 1h
    labels:
      severity: info
      service: wsus
      context: "{{ $labels.server_name }}"
      meta: "Drive {{ $labels.volume }} is getting full on node {{ $labels.server_name }}"
    annotations:
      description: "Drive {{ $labels.volume }} is getting full on node {{ $labels.server_name }}. Free up some space!"
      summary: "Drive {{ $labels.volume }} is getting full on node {{ $labels.server_name }}"

  - alert: WSUSHighCpuLoad
    expr: count(avg by (server_name) (100 - (irate(windows_cpu_time_total{mode="idle", job="win-exporter-wsus"}[10m]) * 100)) > 80) 
    for: 1h
    labels:
      severity: info
      service: wsus
      context: "{{ $labels.server_name }}"
      meta: "High CPU Load on node {{ $labels.server_name }}"
    annotations:
      description: "High CPU Load on node {{ $labels.server_name }}"
      summary: "High CPU Load on node {{ $labels.server_name }}"

  - alert: WSUSHighMemUsage
    expr: count((100 - (100 * windows_os_physical_memory_free_bytes{job="win-exporter-wsus"} / windows_cs_physical_memory_bytes{job="win-exporter-wsus"})) > 90) by (server_name)
    for: 1h
    labels:
      severity: info
      service: wsus
      context: "{{ $labels.server_name }}"
      meta: "High Memory usage on node {{ $labels.server_name }}"
    annotations:
      description: "High Memory usage on node {{ $labels.server_name }}"
      summary: "High Memory usage on node {{ $labels.server_name }}"
