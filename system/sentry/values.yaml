# Default values for sentry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
serverReplicaCount: 1
workerReplicaCount: 1

#  SENTRY_FILESTORE_DIR
#
#secretKey: $(docker run --rm sentry config generate-secret-key)
#emailHost:
#serverEmail: '"Sentry" <root@localhost>'
#singleOrganization: false
#githubAppId:
#githubApiSecret:
#useSsl: false
#
#extraEnvVars:
#  e.g.
#  GITHUB_BASE_DOMAIN: github.example.com
#  GITHUB_API_DOMAIN: api.github.example.com
#
# initial user:
# adminEmail:
# adminPassword:
# Generate with: python -c 'import sys,uuid; sys.stdout.write(uuid.uuid4().hex+ uuid.uuid4().hex)
# adminToken:
organizationName: Monsoon
organizationSlug: monsoon
image:
  sentry:
    repository: sentry
    tag: 21.5.0-r1
    pullPolicy: IfNotPresent
  snuba:
    repository: getsentry/snuba
    tag: 21.5.0
    pullPolicy: IfNotPresent
  relay:
    repository: getsentry/relay
    tag: 21.5.0
    pullPolicy: IfNotPresent
  symbolicator:
    repository: getsentry/symbolicator
    tag: 0.3.3
    pullPolicy: IfNotPresent
  clickhouse:
    repository: yandex/clickhouse-server
    tag: 21.3.20
    pullPolicy: IfNotPresent
  kafka:
    repository: confluentinc/cp-kafka
    tag: 5.5.7
    pullPolicy: IfNotPresent
  zookeeper:
    repository: confluentinc/cp-zookeeper
    tag: 5.5.7
    pullPolicy: IfNotPresent
  void:
    repository: alpine
    tag: v20201119181236-v3.9
    pullPolicy: IfNotPresent

service:
  name: sentry
  type: ClusterIP
  externalPort: 80
  internalPort: 9000
pruning_time: '0315'

owner-info:
  support-group: identity
  service: sentry
  maintainers:
    - Rajiv Mucheli
    - Olaf Heydorn
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/system/sentry

ingress:
  enabled: false
#  host:
#  tls_crt:
#  tls_key:

rbac:
  create: true

memcached:
  memoryLimit: "2048"
  args:
    - "memcached"
    - "-u memcached"
  alerts:
    support_group: identity

operator:
  #sentryEndpoint: https://sentry.$region.cloud.sap/api/0/
  enabled: false
  image:
    repository: kube-sentry
    tag: 0.3.0
    pullPolicy: IfNotPresent

postgresql:
  postgresDatabase: sentry
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 50Gi
  resources:
    requests:
      memory: 10Gi
      cpu: 4
    limits:
      memory: 10Gi
      cpu: 4

redis:
  # redisPassword:
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 10Gi
  resources:
    requests:
      memory: 5Gi
      cpu: 2
    limits:
      memory: 10Gi
      cpu: 2

sentry:
  resources:
    requests:
      memory: 5Gi
      cpu: 4
    limits:
      memory: 10Gi
      cpu: 4

serviceAccount:
  annotations: {}
  enabled: true
  name: "sentry"
  automountServiceAccountToken: true

# Deploy Sentry Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack

pgbackup:
  database:
    name: sentry
  alerts:
    support_group: foundation

pgmetrics:
  db_name: sentry
  alerts:
    large_database_size_enabled: false
    support_group: foundation

  customMetrics:
    sentry_unresolved_issues:
      query: >
        SELECT o.slug AS organization, p.slug AS project, COUNT(*) FROM sentry_groupedmessage gm
          JOIN sentry_project p ON gm.project_id = p.id
          JOIN sentry_organization o ON p.organization_id = o.id
         WHERE gm.status = 0
         GROUP BY o.slug, p.slug
      metrics:
        - organization: {usage: LABEL, description: "Sentry organization"}
        - project:      {usage: LABEL, description: "Sentry project"}
        - gauge:        {usage: GAUGE, description: "Number of unresolved issues in project"}

    sentry_unresolved_issues_nova:
      query: >
        SELECT o.slug AS organization, p.slug AS project, message, COUNT(*) FROM sentry_groupedmessage gm
          JOIN sentry_project p ON gm.project_id = p.id
          JOIN sentry_organization o ON p.organization_id = o.id
         WHERE gm.status = 0 AND p.slug = 'nova'
         GROUP BY o.slug, p.slug, message
      metrics:
        - organization: {usage: LABEL, description: "Sentry organization"}
        - project:      {usage: LABEL, description: "Sentry project"}
        - message:      {usage: LABEL, description: "Issue message"}
        - gauge:        {usage: GAUGE, description: "Number of unresolved issues in project"}

probe:
  enabled: false

# enable when Sentry version is upgraded, also validate if GEOIP_PATH_MMDB is configured.
databaseUpgrade:
  enabled: false

# sentry-sentry-tls is used, keeping the config for future reference.
secretIngress:
  tls_crt:
    enabled: false

kafka:
  enabled: true
  service:
    ports:
      client: 9092
  # provisioning:
  #   enabled: true
  #   # Topic list is based on files below.
  #   # - https://github.com/getsentry/snuba/blob/master/snuba/utils/streams/topics.py
  #   # - https://github.com/getsentry/self-hosted/blob/master/install/create-kafka-topics.sh#L6
  #   # Note that snuba component might fail if you set `hooks.snubaInit.kafka.enabled` to `false` and remove the topics from this default topic list.
  #   topics:
  #     - name: events
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: event-replacements
  #     - name: snuba-commit-log
  #     - name: cdc
  #     - name: transactions
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: snuba-transactions-commit-log
  #     - name: snuba-metrics
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: outcomes
  #     - name: ingest-sessions
  #     - name: snuba-sessions-commit-log
  #     - name: snuba-metrics-commit-log
  #     - name: scheduled-subscriptions-events
  #     - name: scheduled-subscriptions-transactions
  #     - name: scheduled-subscriptions-sessions
  #     - name: scheduled-subscriptions-metrics
  #     - name: scheduled-subscriptions-generic-metrics-sets
  #     - name: scheduled-subscriptions-generic-metrics-distributions
  #     - name: scheduled-subscriptions-generic-metrics-counters
  #     - name: events-subscription-results
  #     - name: transactions-subscription-results
  #     - name: sessions-subscription-results
  #     - name: metrics-subscription-results
  #     - name: generic-metrics-subscription-results
  #     - name: snuba-queries
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: processed-profiles
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: profiles-call-tree
  #     - name: ingest-replay-events
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #         "max.message.bytes": "15000000"
  #     - name: snuba-generic-metrics
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: snuba-generic-metrics-sets-commit-log
  #     - name: snuba-generic-metrics-distributions-commit-log
  #     - name: snuba-generic-metrics-counters-commit-log
  #     - name: generic-events
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: snuba-generic-events-commit-log
  #     - name: group-attributes
  #       config:
  #         "message.timestamp.type": LogAppendTime
  #     - name: snuba-attribution
  #     - name: snuba-dead-letter-metrics
  #     - name: snuba-dead-letter-metrics-sets
  #     - name: snuba-dead-letter-metrics-counters
  #     - name: snuba-dead-letter-metrics-distributions
  #     - name: snuba-dead-letter-sessions
  #     - name: snuba-dead-letter-generic-metrics
  #     - name: snuba-dead-letter-replays
  #     - name: snuba-dead-letter-generic-events
  #     - name: snuba-dead-letter-querylog
  #     - name: snuba-dead-letter-group-attributes
  #     - name: ingest-attachments
  #     - name: ingest-transactions
  #     - name: ingest-events
  #     - name: ingest-replay-recordings
  #     - name: ingest-metrics
  #     - name: ingest-performance-metrics
  #     - name: ingest-monitors
  #     - name: profiles
  #     - name: ingest-occurrences

externalKafka:
  ## Hostname or ip address of external kafka
  ##
  # host: "kafka-confluent"
  port: 9092

geodata:
  path: /geoip/GeoLite2-City.mmdb
  volumeName: geoip
  mountPath: /geodata